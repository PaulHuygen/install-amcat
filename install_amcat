#!/bin/bash
SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
OLDD=`pwd`
set -e
if
  [ -e $SCRIPTDIR/local.cfg ]
then
  source $SCRIPTDIR/local.cfg
fi
source $SCRIPTDIR/defaults.cfg

#
# Install ubuntu packages
#
if
    [ -e /etc/apt/sources.list.d/r-cran-trusty.list ]
then
    echo Ubuntu already prepared.
else
    echo Prepare Ubuntu
    apt-get update && apt-get -y upgrade 
    apt-get -y install apt-transport-https 
    echo 'deb https://mirrors.cicku.me/CRAN/bin/linux/ubuntu trusty/' > /etc/apt/sources.list.d/r-cran-trusty.list
    echo 'deb https://cran.rstudio.com/bin/linux/ubuntu trusty/' >> /etc/apt/sources.list.d/r-cran-trusty.list
    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys $APT_KEY
    apt-get update && apt-get -y upgrade 
    cat apt_requirements.txt | tr '\n' ' ' | xargs apt-get install -y
fi
#apt-get -y install antiword unrtf rabbitmq-server python-pip python-dev libxml2-dev libxslt-dev lib32z1-dev postgresql postgresql-server-dev-9.3 postgresql-contrib-9.3 python-virtualenv git graphviz wget software-properties-common python-software-properties
# apt-get -y install r-base r-base-dev
echo "Checking whether user $AMCAT_USER exists"
# The directory that contains $AMCAT_ROOT will be the user's home directory
set +e
getent passwd $AMCAT_USER  > /dev/null
if [ $? -eq 2 ]; then
    echo "Creating user..."
    USER_HOME=`dirname $AMCAT_ROOT` 
    useradd -Ms/bin/bash --home "$USER_HOME" $AMCAT_USER
    mkdir -p $USER_HOME
    chown amcat:amcat $USER_HOME
fi
set -e
#
# Install java when no java can be found
#
echo "Checking java install."
set +e
which java >/dev/null
if [ $? -ne 0 ]; then
    if
      [ ! -e $JAVABALL ]
    then
      echo No java. Please provide $JAVABALL. 
      exit 4
    fi
   cd $JAVA_SOCKET
   tar -xzf $JAVABALL   
   export JAVA_HOME=$JAVA_SOCKET/$JAVABASENAME
   echo "export JAVA_HOME=$JAVA_SOCKET/$JAVABASENAME" >> /etc/profile.d/amcat
   for file in $JAVA_HOME/bin/* ; do ln -s $file /usr/local/bin/ ; done 
fi
if
    [ -d $JAVA_SOCKET/$JAVABASENAME ]
then
   export JAVA_HOME=$JAVA_SOCKET/$JAVABASENAME
fi    
set -e
#
#
# Postgresql
#
echo Configure Postgresql
set +e
service postgresql start
sudo -u postgres createuser -s root
createdb amcat
set -e

#
# Elastic Search
#
echo ElasticSearch
#cd /usr/local/share
#tar -xzf /tmp/jre-8u111-linux-x64.tar.gz
#rm /tmp/jre-8u111-linux-x64.tar.gz
#export JAVA_HOME=/usr/local/share/jre1.8.0_111
#echo 'export JAVA_HOME=/usr/local/share/jre1.8.0_111' >> /etc/profile.d/amcat
#for file in $JAVA_HOME/bin/* ; do ln -s $file /usr/local/bin/ ; done 
cd /tmp
# wget "https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.4.4.deb"
set +e
dpkg -l | grep elasticsearch >/dev/null
if
    [ $? -gt 0 ]
then
    echo Install ElasticSearch
    wget $ELASTIC_DEB_URL
    dpkg -i $ELASTICDEB
    rm $ELASTICDEB
    /usr/share/elasticsearch/bin/plugin -install elasticsearch/elasticsearch-analysis-icu/2.4.2
    /usr/share/elasticsearch/bin/plugin -install mobz/elasticsearch-head
    /usr/share/elasticsearch/bin/plugin -install lukas-vlcek/bigdesk
    echo -e "\nscript.disable_dynamic: false" | tee -a /etc/elasticsearch/elasticsearch.yml
    if
        [ ! -z "$JAVA_HOME" ]
    then
        echo "JAVA_HOME=$JAVA_HOME" >> /etc/default/elasticsearch
    fi
fi
set -e
cd $OLDD
#
# Hitcount
#
if
    [ ! -e /usr/share/elasticsearch/hitcount.jar ]
then
    wget $HITCOUNTJAR_URL -O /usr/share/elasticsearch/hitcount.jar
    sed </etc/init.d/elasticsearch '/ES_HOME=/a\ES_CLASSPATH=$ES_HOME/hitcount.jar' >/tmp/es1
    sed </tmp/es1 '/ES_CLASSPATH=/a\export ES_CLASSPATH' >/tmp/es2
    sed </tmp/es2 '/DAEMON_OPTS=/s/\"$/ -Des.index.similarity.default.type=nl.vu.amcat.HitCountSimilarityProvider\"/' >/etc/init.d/elasticsearch
    rm /tmp/es1 /tmp/es2
    service elasticsearch restart
fi
#
# Bower
#
# apt-get -y install nodejs-legacy npm
npm install -g bower

#
# Amcat
#
if
  [ ! -d $AMCAT_ROOT ]
then
  cd $AMCAT_SOCKET
  git clone -b $AMCAT_GITBRANCHE $AMCAT_REMOTE_REPO
  cd $AMCAT_ROOT
  pip install -r requirements.txt
  export PYTHONPATH=$PYTHONPATH:$AMCAT_ROOT
  export AMCAT_ES_LEGACY_HASH=N
  echo "export PYTHONPATH=$PYTHONPATH:$AMCAT_ROOT" >> /etc/profile.d/amcat
  echo 'export AMCAT_ES_LEGACY_HASH=N' >> /etc/profile.d/amcat
  bower --allow-root install
  python -m amcat.manage syncdb
fi
#
# WSGI
#
pip install uwsgi

# 20161207 set +e
# 20161207 stop amcat_wsgi
# 20161207 set -e
# 20161207 
# 20161207 SRC=$SCRIPTDIR/amcat_wsgi.conf-dist
# 20161207 TRG=/etc/init/amcat_wsgi.conf
# 20161207 echo "Checking upstart script at $TRG"
# 20161207 if [ ! -e $TRG ]; then
# 20161207     echo "Creating upstart script $TRG from $SRC"
# 20161207     sed -e "s#__AMCAT_ROOT__#$AMCAT_ROOT#" \
# 20161207 	-e "s#__AMCAT_USER__#$AMCAT_USER#" \
# 20161207 	-e "s#__AMCAT_DB_HOST__#$AMCAT_DB_HOST#" \
# 20161207 	-e "s#__AMCAT_DB_USER__#$AMCAT_DB_USER#" \
# 20161207 	-e "s#__AMCAT_DB_NAME__#$AMCAT_DB_NAME#" \
# 20161207 	-e "s#__AMCAT_DB_PASSWORD__#$AMCAT_DB_PASSWORD#" \
# 20161207 	-e "s#__UWSGI_SOCKET__#$UWSGI_SOCKET#"  < $SRC > $TRG
# 20161207     chmod 600 $TRG
# 20161207 fi
# 20161207 
# 20161207 set +e
# 20161207 start amcat_wsgi
# 20161207 set -e
# 20161207 
# 20161207 #
# 20161207 # NGINX
# 20161207 #
# 20161207 
# 20161207 # The default nginx conflicts with amcat, so throw it out of the way
# 20161207 rm -rf /etc/nginx/sites-enabled/default
# 20161207 
# 20161207 SRC=$SCRIPTDIR/nginx-amcat.conf-dist
# 20161207 TRG=/etc/nginx/sites-available/amcat.conf
# 20161207 echo "Checking nginx site at $TRG"
# 20161207 if [ ! -e $TRG ]; then
# 20161207     echo "Creating upstart script $TRG from $SRC"
# 20161207     sed -e "s#__SERVER_NAME__#$SERVER_NAME#" \
# 20161207         -e "s#__AMCAT_REPO__#$AMCAT_ROOT#" \
# 20161207         -e "s#__NGINX_UWSGI_SOCKET__#$NGINX_UWSGI_SOCKET#"  < $SRC > $TRG
# 20161207 fi
# 20161207 LN=/etc/nginx/sites-enabled/amcat.conf
# 20161207 if [ ! -e $LN ]; then
# 20161207     echo "Linking $LN -> $TRG"
# 20161207     ln -s $TRG $LN
# 20161207 fi
# 20161207 
# 20161207 set +e
# 20161207 /etc/init.d/nginx restart
# 20161207 set -e
# 20161207 
# 20161207 #
# 20161207 # Celery
# 20161207 #
# 20161207 
# 20161207 echo "Configuring and starting celery workers"
# 20161207 set +e
# 20161207 stop amcat_celery
# 20161207 set -e
# 20161207 
# 20161207 SRC=$SCRIPTDIR/amcat_celery.conf-dist
# 20161207 TRG=/etc/init/amcat_celery.conf
# 20161207 echo "Checking upstart script at $TRG"
# 20161207 if [ ! -e $TRG ]; then
# 20161207     echo "Creating upstart script $TRG from $SRC"
# 20161207     sed -e "s#__AMCAT_ROOT__#$AMCAT_REPO#" \
# 20161207         -e "s#__AMCAT_USER__#$AMCAT_USER#" \
# 20161207         -e "s#__AMCAT_DB_HOST__#$AMCAT_DB_HOST#" \
# 20161207         -e "s#__AMCAT_DB_USER__#$AMCAT_DB_USER#" \
# 20161207         -e "s#__AMCAT_DB_NAME__#$AMCAT_DB_NAME#" \
# 20161207         -e "s#__AMCAT_DB_PASSWORD__#$AMCAT_DB_PASSWORD#" < $SRC > $TRG
# 20161207     chmod 600 $TRG
# 20161207 fi
# 20161207 set +e
# 20161207 start amcat_celery
# 20161207 set -e
